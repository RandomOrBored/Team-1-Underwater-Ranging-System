import struct
import utime
import machine
from machine import UART, Pin

uart = UART(0, 9600, tx=Pin(0), rx=Pin(1))

#led setup
led = machine.Pin(25, machine.Pin.OUT)  # Define the LED pin
led.value(True)  # LED is turned on to indicate that the system is running

# control pins
trigger_pin = machine.Pin(14, machine.Pin.OUT)
dds_trigger = machine.Pin(15, machine.Pin.OUT)

# Set constants
speed_of_sound_75f = 1480
start_time = 0
end_time = 0

# Function to send square wave and take start_time
def pulse():
    global start_time
    dds_trigger.value(1)
    start_time = utime.ticks_us()
    utime.sleep_ms(10)
    dds_trigger.value(0)

def send_distance(distance):
    pack = str(distance)
    trigger_pin.value(0)
    uart.write(pack)
    trigger_pin.value(1)

# Input data and calc distance
def listening_branch(pin):
    global end_time
    global start_time
    end_time = utime.ticks_us()
    time_diff = end_time - start_time
    time_diff = time_diff % 10000
    distance = speed_of_sound_75f * time_diff / 2
    print("Distance: {:.2f}".format(distance))
    send_distance(distance)

# Listening_branch pulse
interrupt_pin = Pin(16, Pin.IN, Pin.PULL_UP)
interrupt_pin.irq(handler=listening_branch, trigger=Pin.IRQ_FALLING)  # Interrupt routine

# Ping every 2 sec
while True:
    pulse()
    utime.sleep_ms(2000)
